xlim=c(-3, 7),
xlab="SD", ylab="Density")
plot(weibull_pdf, col=colors$weibull,
ylim=c(0, 1),
xlim=c(-3, 7),
add=TRUE)
plot(norm_pdf, col=colors$norm,
ylim=c(0, 1),
xlim=c(-3, 7),
add=TRUE)
legend("topright",
legend=names(colors),
col==unlist(colors),
cex=0.8,
lwd=1)
# 2.2
plot(sample_cdf, main = "Cumulative Distribution",
do.points=FALSE,
vertical=TRUE,
col=colors$sample,
ylim=c(0, 1),
xlim=c(-5, 5),
xlab="X", ylab = "P(x <= X)")
plot(weibull_cdf, col=colors$weibull,
ylim=c(0, 1),
xlim=c(-5, 5),
add=TRUE)
plot(norm_cdf, col = colors$norm,
ylim=c(0, 1),
xlim=c(-5, 5),
add=TRUE)
legend("topleft",
legend=names(colors),
col=unlist(colors),
inset=c(0.04, 0.08),
cex=0.8,
lwd=1)
set.seed(1993)
dat_shape <- 1.03
dat_scale <- 1
dat <- rweibull(n=100,shape=dat_shape, scale=dat_scale)
sample_pdf <- density(dat)
sample_cdf <- ecdf(dat)
# Create analytical values of a Weibull distribution
weibull_pdf <- function(x, shape=dat_shape, scale=dat_scale) {
dweibull(x, shape, scale)
}
weibull_cdf <- function(x, shape=dat_shape, scale=dat_scale) {
pweibull(x, shape, scale)
}
weibull_mean <- function(shape=dat_shape, scale=dat_scale) {
scale*gamma(1+1/shape)
}
weibull_sd <- function(shape=dat_shape, scale=dat_scale) {
dat_scale*sqrt(gamma(1+2/shape) - (gamma(1+1/dat_shape))^2)
}
# Mean and SD are equivalent between the normal
# distribution and Weibull distribution
norm_mean <- weibull_mean()
norm_sd <- weibull_sd()
# PDF & CDF for normal distribution
norm_pdf <- function(x, mean=norm_mean, sd=norm_sd) {
dnorm(x, mean, sd)
}
norm_cdf <- function(x, mean=norm_mean, sd=norm_sd) {
pnorm(x, mean, sd)
}
# Plot params
par(mfrow=c(1, 2), mar = c(4, 4, 3, 2), mgp = c(2.6, 1, 0), mex = .8)
# Plot colors
colors <- list(sample="blue", weibull="red", norm="green")
# 2.1 - PDF
plot(sample_pdf, main="Probability Density",
col=colors$sample,
ylim=c(0, 1),
xlim=c(-3, 7),
xlab="SD", ylab="Density")
plot(weibull_pdf, col=colors$weibull,
ylim=c(0, 1),
xlim=c(-3, 7),
add=TRUE)
plot(norm_pdf, col=colors$norm,
ylim=c(0, 1),
xlim=c(-3, 7),
add=TRUE)
legend("topright",
legend=names(colors),
col=unlist(colors),
cex=0.8,
lwd=1)
# 2.2 - PDF
plot(sample_cdf, main = "Cumulative Distribution",
do.points=FALSE,
vertical=TRUE,
col=colors$sample,
ylim=c(0, 1),
xlim=c(-5, 5),
xlab="X", ylab = "P(x <= X)")
plot(weibull_cdf, col=colors$weibull,
ylim=c(0, 1),
xlim=c(-5, 5),
add=TRUE)
plot(norm_cdf, col = colors$norm,
ylim=c(0, 1),
xlim=c(-5, 5),
add=TRUE)
legend("topleft",
legend=names(colors),
col=unlist(colors),
inset=c(0.04, 0.08),
cex=0.8,
lwd=1)
library(knitr)
library(modeest)
install.packages("modeest")
library(knitr)
library(modeest)
mode <- function(x) {
uniq_x <- unique(x)
uniq_x[which.max(tabulate(match(x, uniq_x)))]
}
weibull_median <- function(shape=dat_shape, scale=dat_scale) {
scale*(log(2))^(1/shape)
}
weibull_skewness <- function(shape=dat_shape, scale=dat_scale) {
mean_1 <- weibull_median(shape, scale)
sd_1 <- weibull_sd(shape, scale)
(gamma(1+3/shape) * scale^3 - 3*mean_1*sd_1^2 - sd_1^3) / (sd_1^3)
}
df <- data.frame(
mean <- c(mean(dat), norm_mean, norm_mean),
sd <- c(sd(dat), weibull_sd(), norm_sd),
median <- c(median(dat), weibull_median(), norm_mean),
mode <- c(mode(dat), weibullMode(dat_shape, dat_scale), norm_mean),
skewness <- c(skewness(dat)[[1]], weibull_skewness(), 0)
)
row.names(df) <- c("Sample", "Weibull", "Normal")
df <- round(df, 5)
kable(df)
library(knitr)
library(modeest)
mode <- function(x) {
uniq_x <- unique(x)
uniq_x[which.max(tabulate(match(x, uniq_x)))]
}
weibull_median <- function(shape=dat_shape, scale=dat_scale) {
scale*(log(2))^(1/shape)
}
weibull_skewness <- function(shape=dat_shape, scale=dat_scale) {
mean_1 <- weibull_median(shape, scale)
sd_1 <- weibull_sd(shape, scale)
(gamma(1+3/shape) * scale^3 - 3*mean_1*sd_1^2 - sd_1^3) / (sd_1^3)
}
df <- data.frame(
mean=c(mean(dat), norm_mean, norm_mean),
sd=c(sd(dat), weibull_sd(), norm_sd),
median=c(median(dat), weibull_median(), norm_mean),
mode=c(mode(dat), weibullMode(dat_shape, dat_scale), norm_mean),
skewness=c(skewness(dat)[[1]], weibull_skewness(), 0)
)
row.names(df) <- c("Sample", "Weibull", "Normal")
df <- round(df, 5)
kable(df)
ppois(q=5, lambda=2, FALSE)
ppois(q=4, lambda=2, lower.fail=FALSE)
ppois(q=4, lambda=2, lower.tail=FALSE)
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- (mean-a) / (sd/sqrt(x))
2*(1-pt(t_stat, df=n-1))
}
par(mfrow=c(1, 1), mex=0.7)
plot(pval_n, 5, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- (mean-a) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.7)
plot(pval_n, 5, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.7)
plot(pval_n, 5, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.1)
plot(pval_n, 5, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.3)
plot(pval_n, 5, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.6)
plot(pval_n, 5, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.7)
plot(pval_n, 5, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.7)
plot(pval_n, 1, 75,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.7)
plot(pval_n, 5, 70,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="Sample Size")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.7)
plot(pval_n, 5, 70,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="n")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.8)
plot(pval_n, 5, 70,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="n")
table(pval_n)
table(pval_n(5, 70))
table(pval_n(5:70))
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.8)
plot(pval_n, 5, 70,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="n")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.8)
plot(pval_n, 5, 70,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="n")
# P-value as a f(x) of sample size
pval_n <- function(x) {
mean <- 6.3
a <- 7
sd <- 1.702939
t_stat <- abs((mean-a)) / (sd/sqrt(x))
2*(1-pt(t_stat, df=x-1))
}
par(mfrow=c(1, 1), mex=0.8)
plot(pval_n, 10, 70,
main="P-Value vs. Sample Size",
ylab="P-value",
xlab="n")
#Confirmation using t.test
s1 <- c(5, 9, 5, 5, 9, 5, 6, 8, 6, 5)
s2 <- c(5, 8, 4, 4, 5, 4, 4, 4, 7, 8)
t.test(s1, s2)
dt10 <- tibble::tribble(~condition, ~mean.days.alive, ~sd, ~n, "water", 50L, 10L,
20L, "vodka", 45L, 7L, 10L, "coffee", 55L, 4L, 10L)
dt10 <- as.data.frame(dt10)
dt10 <- tibble::tribble(~condition, ~mean.days.alive, ~sd, ~n, "water", 50L, 10L,
20L, "vodka", 45L, 7L, 10L, "coffee", 55L, 4L, 10L)
dt10 <- as.data.frame(dt10)d
dt10 <- tibble::tribble(~condition, ~mean.days.alive, ~sd, ~n, "water", 50L, 10L,
20L, "vodka", 45L, 7L, 10L, "coffee", 55L, 4L, 10L)
dt10 <- as.data.frame(dt10)
dt10
dt9 <- tibble::tribble(~condition, ~live, ~die, ~sum, "treatment", 4L, 11L, 15L, "control", 8L, 7L, 15L, "sum", 12L, 18L, 30L)
dt9 <- as.data.frame(dt9)
dt9
(qf(0.95, df1=3, df2=40-3))
age_IQ <- tibble::tribble(~Age, ~IQ, 23L, 100L, 18L, 105L, 10L, 95L, 45L, 120L)
age_IQ_sums <- cbind(age_IQ, Sums = rowSums(age_IQ))
age_IQ_sums <- rbind(age_IQ, Sums = colSums(age_IS_sums))
age_IQ <- tibble::tribble(~Age, ~IQ, 23L, 100L, 18L, 105L, 10L, 95L, 45L, 120L)
age_IQ_sums <- cbind(age_IQ, Sums = rowSums(age_IQ))
age_IQ_sums <- rbind(age_IQ, Sums = colSums(age_IQ_sums))
age_IQ
ggplot(data=age_IQ,
mapping=aes(x=Age, y=IQ)) +
geom_point() +
geom_smooth(method=lm) +
ggtitle("Age vs. IQ")
library(ggplot2)
ggplot(data=age_IQ,
mapping=aes(x=Age, y=IQ)) +
geom_point() +
geom_smooth(method=lm) +
ggtitle("Age vs. IQ")
library(ggplot2)
ggplot(data=age_IQ,
mapping=aes(x=Age, y=IQ)) +
geom_point() +
geom_smooth(method=lm) +
ggtitle("Age vs. IQ") +
theme(plot.title=element_text(hjust=0.5))
cov(age_IQ$Age, age_IQ$IQ)
cor(age_IQ$Age, age_IQ$IQ)
var(age_IQ$Age)
var(age_IQ$Age)
((100-104.3176)^2+(105-100.906)^2+(95-95.4464)^2+(120-119.3704)^2)
((350-35.998)/350)
(qt(0.975,2))
(2*pt(4.1763, 2, lower.tail=FALSE))
dat <- data.frame(age_IQ$Age, age_IQ$IQ)
bivar_model <- lm(IQ~Age, data=dat)
dat <- data.frame(age_IQ$Age, age_IQ$IQ)
bivar_model <- lm(age_IQ$IQ~age_IQ$Age, data=dat)
summary(bivar_model)
predict(bivar_model)
ggplot(dat, aes(x=age_IQ$Age, y=age_IQ$IQ) +
geom_point() +
geom_smooth(method=lm, se=FALSE))
ggplot(dat, aes(x=Age, y=IQ) +
geom_point() +
geom_smooth(method=lm, se=FALSE))
ggplot(dat, aes(x=age_IQ$Age, y=age_IQ$IQ) +
geom_point() +
geom_smooth(method=lm, se=FALSE))
age_IQ$Age
Age <- age_IQ$Age
IQ <- age_IQ$IQ
ggplot(dat, aes(x=Age, y=IQ)) +
geom_point() +
geom_smooth(method=lm)
set.seed(1993)
library(ggplot2)
ggplot(data=age_IQ,
mapping=aes(x=Age, y=IQ)) +
geom_point() +
ggtitle("Age vs. IQ") +
theme(plot.title=element_text(hjust=0.5))
age_IQ <- tibble::tribble(~Age, ~IQ, 23L, 100L, 18L, 105L, 10L, 95L, 45L, 120L)
age_IQ_sums <- cbind(age_IQ, Sums = rowSums(age_IQ))
age_IQ_sums <- rbind(age_IQ, Sums = colSums(age_IQ_sums))
age_IQ
age_IQ <- tibble::tribble(~Age, ~IQ, 23L, 100L, 18L, 105L, 10L, 95L, 45L, 120L)
age_IQ_sums <- cbind(age_IQ, Sums = rowSums(age_IQ))
age_IQ_sums <- rbind(age_IQ, Sums = colSums(age_IQ_sums))
age_IQ
age_IQ_sums
age_IQ <- tibble::tribble(~Age, ~IQ, 23L, 100L, 18L, 105L, 10L, 95L, 45L, 120L)
age_IQ
dat <- data.frame(age_IQ$Age, age_IQ$IQ)
bivar_model <- lm(age_IQ$IQ~age_IQ$Age, data=dat)
summary(bivar_model)
setwd("/Users/cjdarcy/Library/PPUA5301")
df <- read.table("/Users/cjdarcy/Library/PPUA5301/sleep.txt")
df <- read.table("/Users/cjdarcy/Library/PPUA5301/sleep.txt", header=TRUE)
setwd()
setwd(/Users/cjdarcy)
setwd(Users/cjdarcy)
setwd(/Users/cjdarcy)
setwd(~/PPUA5301/)
setwd(/PPUA5301/)
setwd("~/PPUA5301/")
getwd()
df <- read.table("sleep.txt", header=TRUE)
df <- read.table("sleep.txt", header=TRUE)
df
df <- read.table("sleep.txt", header=TRUE)
df
df <- read.table("sleep.txt", header=TRUE)
df
df <- read.table("sleep.txt", header=TRUE)
# Remove categorical variables
df$Predation <- NULL
df$Exposure <- NULL
df$Danger <- NULL
df
bivar_1 <- lm(df$TotalSleep, df$BodyWt, data=df)
bivar_1 <- lm(df$TotalSleep~df$BodyWt, data=df)
bivar_1
bivar_2 <- lm(df$TotalSleep~df$BrainWt, data=df)
bivar_2
multivar <- lm(df$TotalSleep~., data=df)
summary(multivar)
multivar <- lm(df$TotalSleep~., data=df)
multivar
multivar <- lm(df$TotalSleep~., data=df)
summary(multivar)
df <- read.table("sleep.txt", header=TRUE)
# Remove categorical variables
df$Predation <- NULL
df$Exposure <- NULL
df$Danger <- NULL
df
bivar_1 <- lm(df$TotalSleep~df$BodyWt, data=df)
summary(bivar_1)
bivar_2 <- lm(df$TotalSleep~df$BrainWt, data=df)
summary(bivar_2)
multivar <- lm(df$TotalSleep~df$BodyWt+df$BrainWt+df$Gestation, data=df)
summary(multivar)
multivar <- lm(df$TotalSleep~df$BodyWt+df$BrainWt+df$Gestation, data=df)
summary(multivar)
bivar_1 <- lm(df$TotalSleep~df$BodyWt, data=df)
summary(bivar_1)
bivar_2 <- lm(df$TotalSleep~df$BrainWt, data=df)
summary(bivar_2)
df <- read.table("sleep.txt", header=TRUE)
df
bivar_2 <- lm(df$TotalSleep~df$BrainWt, data=df)
summary(bivar_2)
plot(bivar_2)
bivar_2 <- lm(df$TotalSleep~df$BrainWt, data=df)
summary(bivar_2)
multivar$r.squared
source('~/GitHub/cg_mito/data/output_data/join_mito_data.R')
source('~/GitHub/cg_mito/data/output_data/join_mito_data.R')
source('~/GitHub/cg_mito/data/output_data/join_mito_data.R')
source('~/GitHub/cg_mito/data/output_data/join_mito_data.R')
source('~/GitHub/cg_mito/data/output_data/join_mito_data.R')
source('~/GitHub/cg_mito/data/output_data/join_mito_data.R')
source('~/GitHub/cg_mito/data/output_data/join_mito_data.R')
